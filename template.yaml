AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless app API
Resources:
  FirstFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.first
      Runtime: nodejs6.10
      CodeUri: ./lambdas
      Policies: AWSLambdaFullAccess
      Environment:
        Variables:
          SECOND_FUNCTION: !Ref SecondFunction
          WHAT: 'hello'
      Events:
        GetHello:
          Type: Api
          Properties:
            Path: /l/first
            Method: get
  SecondFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.second
      Runtime: nodejs6.10
      CodeUri: ./lambdas
      Events:
        GetHello:
          Type: Api
          Properties:
            Path: /l/second
            Method: get
  HelloFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.hello
      Runtime: nodejs6.10
      CodeUri: ./api
      Events:
        GetHello:
          Type: Api
          Properties:
            Path: /api/hello
            Method: get
  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      Runtime: nodejs6.10
      CodeUri: ./api
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /api
            Method: get
  PostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.post
      Runtime: nodejs6.10
      CodeUri: ./api
      Events:
        PostResource:
          Type: Api
          Properties:
            Path: /api
            Method: post
  GetAppFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      Runtime: nodejs6.10
      CodeUri: ./app
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /
            Method: get
  
  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: 'christemple'
                Repo: 'serverless-experiment'
                Branch: 'master'
                OAuthToken: 'thisneedsupdated'
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: Build App
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: serverless
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref AppPipelineArtifactStore

  AppCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts:
        Type: CODEPIPELINE
        Name: serverless-experiment
        Packaging: NONE
      Environment:
        computeType: BUILD_GENERAL1_SMALL
        image: aws/codebuild/nodejs:6.3.1
        type: LINUX_CONTAINER
      Name: serverless-experiment
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
      
 CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  AppPipelineArtifactStore:
    Type: AWS::S3::Bucket

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codepipeline-service
        PolicyDocument:
          Statement:
          - Action:
            - codebuild:*
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            Effect: Allow
          - Action:
            - s3:*
            - cloudformation:*
            - iam:PassRole
            Resource: "*"
            Effect: Allow
          Version: '2012-10-17'